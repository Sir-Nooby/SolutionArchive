#LeetCode #200 - Number of Islands (SirNooby)
rows = len(grid)

columns = len(grid[0])

visited = set()

queue = []

directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

total = 0

def bfs(grid):
    
    while queue:
        
        row, column = queue.pop(0)
        
        if (row, column) in visited:
            continue
        
        visited.add((row, column))
        
        for i, v in directions:
            new_row, new_column = row + i, column + v
            
            if 0 <= new_row < rows and 0 <= new_column < columns and grid[new_row][new_column] != "0":
                queue.append((new_row, new_column))


for i in range(rows):
    for v in range(columns):
        if grid[i][v] == "1" and (i, v) not in visited:
            queue.append((i, v))
            bfs(grid)
            total += 1
            

print(total)
