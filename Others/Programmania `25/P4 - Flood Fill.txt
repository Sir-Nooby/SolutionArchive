#Programmania 2025 - PROBLEM 4: Flood Fill
#Notes: This question is the same as LeetCode 733

start_row, start_column = map(int, input().split())

new_color = input().strip()


rows, columns = map(int, input().split())

grid = [input().split() for i in range(rows)]

directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

queue = [(start_row, start_column)]
visited = set()

old_color = grid[start_row][start_column]




while queue:
    
    row, column = queue.pop(-1)
    
    if (row, column) in visited:
        continue
    
    visited.add((row, column))

    grid[row][column] = new_color

    for i, v in directions:
        new_row, new_column = row + i, column + v

        if 0 <= new_row < rows and 0 <= new_column < columns and (new_row, new_column) not in visited and grid[new_row][new_column] == old_color:
            queue.append((new_row, new_column))


for i in range(len(grid)):
    print(grid[i])

